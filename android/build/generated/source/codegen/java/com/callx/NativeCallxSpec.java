
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJavaSpec.js
 *
 * @nolint
 */

package com.callx;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

public abstract class NativeCallxSpec extends ReactContextBaseJavaModule implements TurboModule {
  public static final String NAME = "Callx";

  public NativeCallxSpec(ReactApplicationContext reactContext) {
    super(reactContext);
  }

  @Override
  public @Nonnull String getName() {
    return NAME;
  }

  @ReactMethod
  @DoNotStrip
  public abstract void initialize(ReadableMap config, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void showIncomingCall(ReadableMap callData, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void endCall(String callId, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void answerCall(String callId, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void declineCall(String callId, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void getFCMToken(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void getVoIPToken(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void setFieldMapping(String field, String path, @Nullable String fallback, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void setTrigger(String trigger, String field, String value, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void getCurrentCall(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void isCallActive(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void handleFcmMessage(ReadableMap data, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void hideFromLockScreen(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void moveAppToBackground(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void getConfiguration(Promise promise);
}
